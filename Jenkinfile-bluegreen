pipeline {
    agent any

    environment {
        REGISTRY = "docker.io/balaakashreddyy"
        IMAGE_NAME = "argon-web"
        COLOR = "green"   // change dynamically to blue/green as per next deployment
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/AkashReddy123/argon-design-system.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "üèóÔ∏è Building ${COLOR} version..."
                    sh "docker build -t ${REGISTRY}/${IMAGE_NAME}:${COLOR} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    script {
                        sh '''
                            echo "$PASS" | docker login -u "$USER" --password-stdin
                            docker push ${REGISTRY}/${IMAGE_NAME}:${COLOR}
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG_FILE')]) {
                    script {
                        echo "üöÄ Deploying ${COLOR} version to Kubernetes..."
                        // Export kubeconfig so kubectl can use it
                        sh '''
                            export KUBECONFIG=${KUBECONFIG_FILE}
                            kubectl config view
                            kubectl apply -f k8s/deployment-${COLOR}.yaml
                            kubectl apply -f k8s/service.yaml
                        '''
                    }
                }
            }
        }

        stage('Switch Traffic') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG_FILE')]) {
                    script {
                        echo "üîÅ Switching traffic to ${COLOR} version..."
                        sh '''
                            export KUBECONFIG=${KUBECONFIG_FILE}
                            kubectl set image deployment/argon-${COLOR} argon-web=${REGISTRY}/${IMAGE_NAME}:${COLOR} --record
                            kubectl rollout status deployment/argon-${COLOR}
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Blue-Green deployment successful!"
        }
        failure {
            echo "‚ùå Blue-Green deployment failed!"
        }
    }
}
