pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'balaakashreddyy/argon-web'
        DOCKER_CREDENTIALS = 'dockerhub-credentials'
        KUBECONFIG_CREDENTIALS = 'kubeconfig'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/AkashReddy123/argon-design-system.git', branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Alternate between blue and green
                    COLOR = (env.BUILD_NUMBER.toInteger() % 2 == 0) ? 'blue' : 'green'
                    echo "Building ${COLOR} version..."
                    sh "docker build -t ${DOCKER_IMAGE}:${COLOR} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS}", usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    script {
                        sh '''
                            echo $PASS | docker login -u $USER --password-stdin
                        '''
                        sh "docker push ${DOCKER_IMAGE}:${COLOR}"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: "${KUBECONFIG_CREDENTIALS}", variable: 'KUBECONFIG')]) {
                    script {
                        echo "Deploying ${COLOR} version to Kubernetes..."
                        sh """
                            kubectl apply -f k8s/deployment-${COLOR}.yaml --validate=false --insecure-skip-tls-verify=true
                            kubectl rollout status deployment/argon-${COLOR} --timeout=60s
                            kubectl patch service argon-bluegreen-service -p '{"spec":{"selector":{"app":"argon-web","version":"${COLOR}"}}}'
                            echo "‚úÖ Traffic switched to ${COLOR} version!"
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Blue-Green deployment successful!"
        }
        failure {
            echo "‚ùå Blue-Green deployment failed!"
        }
    }
}
