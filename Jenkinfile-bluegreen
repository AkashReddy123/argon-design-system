pipeline {
    agent any

    environment {
        // Kubernetes config for deployment
        KUBECONFIG = credentials('kubeconfig')
    }

    stages {

        stage('Checkout Code') {
            steps {
                echo '📦 Checking out source code...'
                git branch: 'main',url: 'https://github.com/AkashReddy123/argon-design-system.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo '🐳 Building Docker image...'
                    sh 'docker build -t balaakashreddyy/argon-web:green .'
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    echo '🚀 Logging in & pushing image to DockerHub...'
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                        sh '''
                            echo $PASS | docker login -u $USER --password-stdin
                            docker push balaakashreddyy/argon-web:green
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    echo '☸️ Deploying Green version to Kubernetes...'
                    withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                        // TLS verification disabled for local/minikube clusters
                        sh '''
                            kubectl set image deployment/argon-green argon-web=balaakashreddyy/argon-web:green --record --insecure-skip-tls-verify=true || true
                            kubectl apply -f k8s/deployment-green.yaml --validate=false --insecure-skip-tls-verify=true
                        '''
                    }
                }
            }
        }

        stage('Verification') {
            steps {
                echo '🔍 Verifying Green deployment...'
                sh 'kubectl get pods --insecure-skip-tls-verify=true'
            }
        }

        stage('Cleanup Old Version') {
            steps {
                echo '🧹 Cleaning up Blue deployment...'
                sh 'kubectl delete deployment argon-blue --ignore-not-found --insecure-skip-tls-verify=true'
            }
        }
    }

    post {
        success {
            echo '🎉 Blue-Green Deployment Successful!'
        }
        failure {
            echo '❌ Deployment failed. Check Jenkins logs for details.'
        }
    }
}
